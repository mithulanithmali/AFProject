{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\fileupload\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\fileupload\\\\client\\\\src\\\\components\\\\FileUpload.js\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState('Choose File'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filename = _useState4[0],\n        setFilename = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadedFile = _useState6[0],\n        setUploadedFile = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        uploadPercentage = _useState10[0],\n        setUploadPercentage = _useState10[1];\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: ProgressEvent => {\n          setUploadPercentage(parseInt(Math.round(ProgressEvent.loaded * 100)));\n        }\n      });\n      const _res$data = res.data,\n            fileName = _res$data.fileName,\n            filePath = _res$data.filePath;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('problem');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, filename)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\fileupload\\client\\src\\components\\FileUpload.js"],"names":["React","Fragment","useState","Message","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","ProgressEvent","parseInt","Math","round","loaded","data","fileName","filePath","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, {Fragment ,useState} from 'react';\r\nimport Message from './Message';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n    const [file,setFile] = useState('');\r\n    const [filename,setFilename] = useState('Choose File');\r\n    const [uploadedFile , setUploadedFile] = useState({});\r\n    const [message , setMessage ] = useState('');\r\n    const [uploadPercentage ,setUploadPercentage] = useState(0);\r\n\r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n      };\r\n    \r\n      const onSubmit = async e => {\r\n          e.preventDefault();\r\n\r\n          const formData = new FormData();\r\n          formData.append('file' , file);\r\n\r\n          try{\r\n                const res = await axios.post('/upload' , formData,{\r\n                \r\n                    headers : {\r\n                        'Content-Type' : 'multipart/form-data'\r\n                    },\r\n                    onUploadProgress: ProgressEvent => {\r\n                        setUploadPercentage(parseInt(Math.round((ProgressEvent.loaded*100))))\r\n                    }\r\n                });\r\n                \r\n                const { fileName , filePath} = res.data;\r\n                setUploadedFile({ fileName , filePath});\r\n                setMessage('File Uploaded');\r\n\r\n          }catch(err){\r\n            if(err.response.status === 500){\r\n                setMessage('problem');\r\n                \r\n            }else{\r\n                setMessage(err.response.data.msg);\r\n            }\r\n          }\r\n      }\r\n    return (\r\n        <Fragment>\r\n            {message ? <Message msg = {message} /> : null}\r\n            <form onSubmit = {onSubmit}>\r\n                <div className='custom-file mb-4'>\r\n                <input\r\n                type='file'\r\n                className='custom-file-input'\r\n                id='customFile'\r\n                onChange = {onChange}\r\n            />\r\n                <label className='custom-file-label' htmlFor='customFile'>\r\n                {filename}\r\n          </label>\r\n        </div>\r\n        \r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn btn-primary btn-block mt-4'\r\n        />\r\n\r\n        </form>\r\n        { uploadedFile ? <div className = \"row mt-5\">\r\n            <div className = \"col-md-6 m-auto\">\r\n                <h3 className = 'text-center'>{ uploadedFile.fileName}</h3>\r\n                <img style = {{width : '100%'}} src = {uploadedFile.filePath} alt =\"\" />\r\n            </div>\r\n        </div> : null}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}